/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Program;

import ExportToFile.ExportToExcel;
import ExportToFile.ExportToTxt;
import Frequency.WordFrequencyAnalyse;
import MultiThread.MultiThreadsManager;
import Dialog.ProgressDialog;
import java.io.File;
import java.lang.reflect.InvocationTargetException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author zhouheng
 */
public class MainWindows extends javax.swing.JFrame {

    /**
     * Creates new form MainWindows
     */
    public MainWindows() {
        initComponents();

        //关闭窗口操作
        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        programName = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        extractBeginCB = new javax.swing.JCheckBox();
        extractEndCB = new javax.swing.JCheckBox();
        frequencyDescendCB = new javax.swing.JCheckBox();
        frequencyAscendCB = new javax.swing.JCheckBox();
        frequencyCB = new javax.swing.JCheckBox();
        alphaAscendCB = new javax.swing.JCheckBox();
        alphaDescendCB = new javax.swing.JCheckBox();
        outOfBoundCB = new javax.swing.JCheckBox();
        changeCB = new javax.swing.JCheckBox();
        extractLengthCB = new javax.swing.JCheckBox();
        lengthTextField = new javax.swing.JTextField();
        beginTextField = new javax.swing.JTextField();
        endTextField = new javax.swing.JTextField();
        lengthLB = new javax.swing.JLabel();
        beginLB = new javax.swing.JLabel();
        endLB = new javax.swing.JLabel();
        singleExportCB = new javax.swing.JCheckBox();
        singleSavePathTF = new javax.swing.JTextField();
        singleSavePathBT = new javax.swing.JButton();
        syntacticCB = new javax.swing.JCheckBox();
        singlePathTField = new javax.swing.JTextField();
        singlePathLB = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        singleResult = new javax.swing.JTextArea();
        singleChooseBT = new javax.swing.JButton();
        singleStartBT = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        pathATextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        pathBTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        wordsCountCB = new javax.swing.JCheckBox();
        sameWordsCB = new javax.swing.JCheckBox();
        doubleExportCB = new javax.swing.JCheckBox();
        doubleSavePathTF = new javax.swing.JTextField();
        doubleSavePathBT = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        doubleResult = new javax.swing.JTextArea();
        chooseABT = new javax.swing.JButton();
        chooseBBT = new javax.swing.JButton();
        doubleStartBT = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        singlePathLB1 = new javax.swing.JLabel();
        bigFileTargetTF = new javax.swing.JTextField();
        bigFileTargetBT = new javax.swing.JButton();
        bigFileStartBT = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        bigFileResultArea = new javax.swing.JTextArea();
        bigFileExportCB = new javax.swing.JCheckBox();
        bigFileSavePathTF = new javax.swing.JTextField();
        bigFileSaveFileBT = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("词频分析器");
        setMinimumSize(new java.awt.Dimension(800, 660));
        setPreferredSize(new java.awt.Dimension(700, 500));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        programName.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        programName.setText("英语词频分析器");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "功能选择", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 16))); // NOI18N

        extractBeginCB.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        extractBeginCB.setText("按词头检索");
        extractBeginCB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                extractBeginCBItemStateChanged(evt);
            }
        });
        extractBeginCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                extractBeginCBActionPerformed(evt);
            }
        });

        extractEndCB.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        extractEndCB.setText("按词尾检索");
        extractEndCB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                extractEndCBItemStateChanged(evt);
            }
        });
        extractEndCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                extractEndCBActionPerformed(evt);
            }
        });

        frequencyDescendCB.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        frequencyDescendCB.setText("词频降序");
        frequencyDescendCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frequencyDescendCBActionPerformed(evt);
            }
        });

        frequencyAscendCB.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        frequencyAscendCB.setText("词频升序");

        frequencyCB.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        frequencyCB.setText("词频统计");

        alphaAscendCB.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        alphaAscendCB.setText("按字母升序");

        alphaDescendCB.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        alphaDescendCB.setText("按字母降序");
        alphaDescendCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alphaDescendCBActionPerformed(evt);
            }
        });

        outOfBoundCB.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        outOfBoundCB.setText("超纲统计");

        changeCB.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        changeCB.setText("词形变换统计");

        extractLengthCB.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        extractLengthCB.setText("按长度检索");
        extractLengthCB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                extractLengthCBItemStateChanged(evt);
            }
        });
        extractLengthCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                extractLengthCBActionPerformed(evt);
            }
        });

        lengthTextField.setEditable(false);
        lengthTextField.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        lengthTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lengthTextFieldActionPerformed(evt);
            }
        });

        beginTextField.setEditable(false);
        beginTextField.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        beginTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beginTextFieldActionPerformed(evt);
            }
        });

        endTextField.setEditable(false);
        endTextField.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        endTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endTextFieldActionPerformed(evt);
            }
        });

        lengthLB.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lengthLB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lengthLB.setText("长度：");

        beginLB.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        beginLB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        beginLB.setText("词头：");

        endLB.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        endLB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        endLB.setText("词尾：");

        singleExportCB.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        singleExportCB.setText("结果导出");
        singleExportCB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                singleExportCBItemStateChanged(evt);
            }
        });

        singleSavePathTF.setEditable(false);
        singleSavePathTF.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N

        singleSavePathBT.setText("选择路径");
        singleSavePathBT.setEnabled(false);
        singleSavePathBT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                singleSavePathBTMouseClicked(evt);
            }
        });

        syntacticCB.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        syntacticCB.setText("句法分析(仅支持输出txt文档)");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(outOfBoundCB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(extractLengthCB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lengthLB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lengthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(extractBeginCB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(beginLB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(beginTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(frequencyCB)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(frequencyAscendCB)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(frequencyDescendCB)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(alphaAscendCB)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(alphaDescendCB)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(changeCB))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(extractEndCB)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(endLB)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(endTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(15, 15, 15)
                                        .addComponent(syntacticCB)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(2, 2, 2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(singleExportCB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(singleSavePathTF)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(singleSavePathBT)))
                .addGap(10, 10, 10))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(frequencyCB)
                    .addComponent(frequencyAscendCB)
                    .addComponent(frequencyDescendCB)
                    .addComponent(alphaAscendCB)
                    .addComponent(alphaDescendCB)
                    .addComponent(changeCB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outOfBoundCB)
                    .addComponent(lengthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lengthLB)
                    .addComponent(extractLengthCB)
                    .addComponent(extractBeginCB)
                    .addComponent(beginTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(beginLB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(extractEndCB)
                    .addComponent(endTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(endLB)
                    .addComponent(syntacticCB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(singleExportCB)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(singleSavePathTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(singleSavePathBT)))
                .addContainerGap())
        );

        singlePathTField.setEditable(false);
        singlePathTField.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N

        singlePathLB.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        singlePathLB.setText("文件路径：");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "分析结果", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 16))); // NOI18N

        singleResult.setEditable(false);
        singleResult.setColumns(20);
        singleResult.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        singleResult.setRows(5);
        singleResult.setDisabledTextColor(java.awt.Color.black);
        singleResult.setEnabled(false);
        jScrollPane2.setViewportView(singleResult);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jScrollPane2)
                .addGap(6, 6, 6))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                .addContainerGap())
        );

        singleChooseBT.setText("选择文件");
        singleChooseBT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                singleChooseBTMouseClicked(evt);
            }
        });

        singleStartBT.setText("开始分析");
        singleStartBT.setEnabled(false);
        singleStartBT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                singleStartBTMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(singlePathLB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(singlePathTField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(singleChooseBT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(singleStartBT))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(4, 4, 4)))
                .addGap(6, 6, 6))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(singlePathTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(singlePathLB)
                    .addComponent(singleChooseBT)
                    .addComponent(singleStartBT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(6, 6, 6))
        );

        jTabbedPane1.addTab("单文档分析", jPanel4);

        pathATextField.setEditable(false);
        pathATextField.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel6.setText("文件路径：");

        pathBTextField.setEditable(false);
        pathBTextField.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel7.setText("文件路径：");

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "功能选择", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 16))); // NOI18N

        wordsCountCB.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        wordsCountCB.setText("词数统计");

        sameWordsCB.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        sameWordsCB.setText("相同词统计");

        doubleExportCB.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        doubleExportCB.setText("结果导出");
        doubleExportCB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                doubleExportCBItemStateChanged(evt);
            }
        });

        doubleSavePathTF.setEditable(false);
        doubleSavePathTF.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N

        doubleSavePathBT.setText("选择路径");
        doubleSavePathBT.setEnabled(false);
        doubleSavePathBT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                doubleSavePathBTMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(wordsCountCB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sameWordsCB)
                        .addGap(0, 502, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(doubleExportCB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(doubleSavePathTF)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(doubleSavePathBT)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wordsCountCB)
                    .addComponent(sameWordsCB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(doubleExportCB)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(doubleSavePathTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(doubleSavePathBT)))
                .addGap(6, 6, 6))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "分析结果", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 16))); // NOI18N

        jScrollPane1.setEnabled(false);

        doubleResult.setEditable(false);
        doubleResult.setColumns(20);
        doubleResult.setRows(5);
        jScrollPane1.setViewportView(doubleResult);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                .addContainerGap())
        );

        chooseABT.setText("选择文件A");
        chooseABT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chooseABTMouseClicked(evt);
            }
        });

        chooseBBT.setText("选择文件B");
        chooseBBT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chooseBBTMouseClicked(evt);
            }
        });

        doubleStartBT.setText("开始分析");
        doubleStartBT.setEnabled(false);
        doubleStartBT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                doubleStartBTMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pathATextField))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pathBTextField)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(chooseABT, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(chooseBBT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(doubleStartBT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pathATextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(chooseABT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pathBTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(chooseBBT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(doubleStartBT)
                .addGap(6, 6, 6)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("双文档分析", jPanel3);

        singlePathLB1.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        singlePathLB1.setText("文件路径：");

        bigFileTargetTF.setEditable(false);
        bigFileTargetTF.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N

        bigFileTargetBT.setText("选择文件");
        bigFileTargetBT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bigFileTargetBTMouseClicked(evt);
            }
        });

        bigFileStartBT.setText("开始分析");
        bigFileStartBT.setEnabled(false);
        bigFileStartBT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bigFileStartBTMouseClicked(evt);
            }
        });

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "分析结果", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 16))); // NOI18N

        bigFileResultArea.setEditable(false);
        bigFileResultArea.setColumns(20);
        bigFileResultArea.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        bigFileResultArea.setRows(5);
        bigFileResultArea.setDisabledTextColor(java.awt.Color.black);
        bigFileResultArea.setEnabled(false);
        jScrollPane3.setViewportView(bigFileResultArea);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jScrollPane3)
                .addGap(6, 6, 6))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
                .addContainerGap())
        );

        bigFileExportCB.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        bigFileExportCB.setText("结果导出");
        bigFileExportCB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                bigFileExportCBItemStateChanged(evt);
            }
        });

        bigFileSavePathTF.setEditable(false);
        bigFileSavePathTF.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N

        bigFileSaveFileBT.setText("选择路径");
        bigFileSaveFileBT.setEnabled(false);
        bigFileSaveFileBT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bigFileSaveFileBTMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(bigFileExportCB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bigFileSavePathTF)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bigFileSaveFileBT, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(singlePathLB1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bigFileTargetTF, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bigFileTargetBT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bigFileStartBT)))
                .addGap(10, 10, 10))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bigFileTargetTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(singlePathLB1)
                    .addComponent(bigFileTargetBT)
                    .addComponent(bigFileStartBT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bigFileExportCB)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bigFileSavePathTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bigFileSaveFileBT)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("大文档词频分析", jPanel7);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(programName)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(programName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * 判断用户选择的保存文件是否已存在
     *
     * @param file 保存文件
     * @return 1:不存在；2：用户点击取消；3：用户点击替换；4：用户点击保留两者
     */
    private File fileIsExist(File file) {
        if (file.exists()) {
            //文件存在，弹出提示框，提示保留两者，还是替换，还是取消
            Object[] options = {"取消", "替换", "保留两者"};
            int response = JOptionPane.showOptionDialog(this, "当前路径下已存在该文件！", "警告",
                    JOptionPane.YES_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
            if (response == 0) {
                //取消
                System.out.println("取消");
                return null;
            } else if (response == 1) {
                //替换，先删除该文件，再返回路径
                System.out.println("替换");
                if (file.delete()) {
                    System.out.println("删除成功");
                }
                return file;
            } else if (response == 2) {
                //保留两者
                System.out.println("保留两者");
                String beforeName = file.getName().substring(0, file.getName().lastIndexOf("."));
                String extension = file.getName().substring(file.getName().lastIndexOf("."));
                File afterFile = new File(file.getParent() + File.separator + beforeName + "(1)" + extension);
                return afterFile;
            }
        }
        return file;
    }

    /**
     * 选择保存文件，弹出文件选择窗口
     *
     * @return 保存文件对象
     */
    private File chooseSaveFile() {
        JFileChooser saveFileChooser = new JFileChooser();
        FileNameExtensionFilter txtFilter = new FileNameExtensionFilter("文本文件（*.txt）", "txt");
        FileNameExtensionFilter excelFilter = new FileNameExtensionFilter("Excel表格（*.xlsx）", "xlsx");
        saveFileChooser.addChoosableFileFilter(txtFilter);
        saveFileChooser.addChoosableFileFilter(excelFilter);

        int option = saveFileChooser.showSaveDialog(this);
        if (option == JFileChooser.APPROVE_OPTION) {
            File saveFile = saveFileChooser.getSelectedFile();

            FileFilter chooseFileFilter = saveFileChooser.getFileFilter();
            if (chooseFileFilter instanceof FileNameExtensionFilter) {
                //如果是合法扩展名
                String[] extensions = ((FileNameExtensionFilter) saveFileChooser.getFileFilter()).getExtensions();
                if (extensions[0].equals("txt")) {
                    //选择txt保存
                    File beforeFile = new File(saveFile.getAbsolutePath() + ".txt");
                    return fileIsExist(beforeFile);

                } else if (extensions[0].equals("xlsx")) {
                    //选择excel保存
                    File beforeFile = new File(saveFile.getAbsolutePath() + ".xlsx");
                    return fileIsExist(beforeFile);
//                    return new File(saveFile.getAbsolutePath() + ".xlsx");
                }
            } else {
                //选择所有文件，添加默认扩展名
                File beforeFile = new File(saveFile.getAbsolutePath() + ".txt");
                return fileIsExist(beforeFile);
            }
        }
        return null;
    }

    /**
     * 选择需要分析的文档，弹出文件选择窗口 文件支持类型为doc,docx,txt
     *
     * @return 选择的文件
     */
    private File chooseOpenFile() {
        JFileChooser openFileChooser = new JFileChooser();
        FileNameExtensionFilter txtFilter = new FileNameExtensionFilter("文本文件（*.txt）", "txt");
        FileNameExtensionFilter docxFilter = new FileNameExtensionFilter("Word文档（*.docx）", "docx");
        FileNameExtensionFilter pdfFilter = new FileNameExtensionFilter("PDF文档（*.pdf）", "pdf");
        //判断扩展名
        openFileChooser.addChoosableFileFilter(txtFilter);
        openFileChooser.addChoosableFileFilter(docxFilter);
        openFileChooser.addChoosableFileFilter(pdfFilter);
        int option = openFileChooser.showOpenDialog(this);
        if (option == JFileChooser.APPROVE_OPTION) {
            File openFile = openFileChooser.getSelectedFile();
            boolean isTxt = txtFilter.accept(openFile);
            boolean isDocx = docxFilter.accept(openFile);
            boolean idPdf = pdfFilter.accept(openFile);
            if (isTxt || isDocx || idPdf) {
                //如果是合法扩展名
                return openFile;
            }
        }
        //如果取消或扩展名非法
        return null;
    }

    private void frequencyDescendCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frequencyDescendCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_frequencyDescendCBActionPerformed

    private void extractBeginCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_extractBeginCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_extractBeginCBActionPerformed

    private void alphaDescendCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alphaDescendCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_alphaDescendCBActionPerformed

    private void extractLengthCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_extractLengthCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_extractLengthCBActionPerformed

    private void extractEndCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_extractEndCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_extractEndCBActionPerformed

    private void lengthTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lengthTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lengthTextFieldActionPerformed

    private void beginTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beginTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_beginTextFieldActionPerformed

    private void endTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_endTextFieldActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // 关闭主程序窗口
        int choice = JOptionPane.showConfirmDialog(null, "您要退出程序吗？", "是否继续？", JOptionPane.YES_NO_OPTION);
        if (choice == JOptionPane.YES_OPTION) {
            //确定关闭
            this.dispose();
            System.exit(0);
        }
    }//GEN-LAST:event_formWindowClosing

    private void doubleExportCBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_doubleExportCBItemStateChanged
        //双文档分析结果导出CheckBox状态改变
        if (doubleExportCB.isSelected()) {
            //保存按钮可用
            doubleSavePathBT.setEnabled(true);
        } else {
            //保存按钮不可用
            doubleSavePathBT.setEnabled(false);
            doubleSavePathTF.setText("");//清除路径
        }
    }//GEN-LAST:event_doubleExportCBItemStateChanged

    private void singleExportCBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_singleExportCBItemStateChanged
        //单文档分析结果导出CheckBox状态改变
        if (singleExportCB.isSelected()) {
            //保存按钮可用
            singleSavePathBT.setEnabled(true);
        } else {
            //保存按钮不可用
            singleSavePathBT.setEnabled(false);
            singleSavePathTF.setText("");//清除保存路径
        }
    }//GEN-LAST:event_singleExportCBItemStateChanged

    private void extractLengthCBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_extractLengthCBItemStateChanged
        //按长度检索状态改变
        if (extractLengthCB.isSelected()) {
            //可进行输入
            lengthTextField.setEditable(true);
        } else {
            //不可输入
            lengthTextField.setEditable(false);
        }
    }//GEN-LAST:event_extractLengthCBItemStateChanged

    private void extractBeginCBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_extractBeginCBItemStateChanged
        //按词头检索状态改变
        if (extractBeginCB.isSelected()) {
            //可进行输入
            beginTextField.setEditable(true);
        } else {
            //不可输入
            beginTextField.setEditable(false);
        }
    }//GEN-LAST:event_extractBeginCBItemStateChanged

    private void extractEndCBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_extractEndCBItemStateChanged
        //按词尾检索状态改变
        if (extractEndCB.isSelected()) {
            //可进行输入
            endTextField.setEditable(true);
        } else {
            //不可输入
            endTextField.setEditable(false);
        }
    }//GEN-LAST:event_extractEndCBItemStateChanged

    private void singleChooseBTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_singleChooseBTMouseClicked
        //单文件分析：选择待分析文件，可选文件扩展类型为txt、docx、pdf
        File openFile = chooseOpenFile();
        if (openFile == null) {
            //选择文件无效，弹出提示框
            System.out.println("选择文件无效");
        } else {
            //System.out.println(openFile.getAbsolutePath());
            singlePathTField.setText(openFile.getAbsolutePath());
            singleStartBT.setEnabled(true);//选择文件后可以点击开始
        }
    }//GEN-LAST:event_singleChooseBTMouseClicked

    private void singleSavePathBTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_singleSavePathBTMouseClicked
        // 单文件分析：选择保存文件
        File saveFile = chooseSaveFile();
        if (saveFile == null) {
            //选择文件无效，弹出提示框
            System.out.println("保存文件无效");
        } else {
            //System.out.println(saveFile.getAbsolutePath());
            singleSavePathTF.setText(saveFile.getAbsolutePath());
        }
    }//GEN-LAST:event_singleSavePathBTMouseClicked

    private void chooseABTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chooseABTMouseClicked
        // 双文档分析：打开A文档
        File openFile = chooseOpenFile();
        if (openFile == null) {
            //选择文件无效，弹出提示框
            System.out.println("选择文件无效");
        } else {
            //System.out.println(openFile.getAbsolutePath());
            pathATextField.setText(openFile.getAbsolutePath());
            //判断B文件是否已经选择
            if (pathBTextField.getText().length() != 0) {
                doubleStartBT.setEnabled(true);
            }
        }
    }//GEN-LAST:event_chooseABTMouseClicked

    private void chooseBBTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chooseBBTMouseClicked
        // 双文档分析：打开文档B
        File openFile = chooseOpenFile();
        if (openFile == null) {
            //选择文件无效，弹出提示框
            System.out.println("选择文件无效");
        } else {
            //System.out.println(openFile.getAbsolutePath());
            pathBTextField.setText(openFile.getAbsolutePath());
            //判断A文件是否已经选择
            if (pathATextField.getText().length() != 0) {
                doubleStartBT.setEnabled(true);
            }
        }
    }//GEN-LAST:event_chooseBBTMouseClicked

    private void doubleSavePathBTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_doubleSavePathBTMouseClicked
        // 双文档分析：选择保存文件
        File saveFile = chooseSaveFile();
        if (saveFile == null) {
            //选择文件无效，弹出提示框
            System.out.println("保存文件无效");
        } else {
            //System.out.println(saveFile.getAbsolutePath());
            doubleSavePathTF.setText(saveFile.getAbsolutePath());
        }
    }//GEN-LAST:event_doubleSavePathBTMouseClicked

    private void singleStartBTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_singleStartBTMouseClicked


        singleResult.setText("");//首先清空显示框

        boolean[] chooseFunctions = new boolean[12];
        chooseFunctions[0] = frequencyCB.isSelected();
        chooseFunctions[1] = frequencyAscendCB.isSelected();
        chooseFunctions[2] = frequencyDescendCB.isSelected();
        chooseFunctions[3] = alphaAscendCB.isSelected();
        chooseFunctions[4] = alphaDescendCB.isSelected();
        chooseFunctions[5] = changeCB.isSelected();
        chooseFunctions[6] = outOfBoundCB.isSelected();
        chooseFunctions[7] = extractLengthCB.isSelected();
        chooseFunctions[8] = extractBeginCB.isSelected();
        chooseFunctions[9] = extractEndCB.isSelected();
        chooseFunctions[10] = singleExportCB.isSelected();
        chooseFunctions[11] = syntacticCB.isSelected();
        if (chooseFunctions[0] == false && chooseFunctions[1] == false
                && chooseFunctions[2] == false && chooseFunctions[3] == false
                && chooseFunctions[4] == false && chooseFunctions[5] == false
                && chooseFunctions[6] == false && chooseFunctions[7] == false
                && chooseFunctions[8] == false && chooseFunctions[9] == false
                && chooseFunctions[11] == false) {
            //分析无效，至少选择一个功能
            JOptionPane.showMessageDialog(this, "请至少选择一个功能！（结果导出除外）", "警告", JOptionPane.WARNING_MESSAGE);
        } else {
            //启动单文档分析
            File openFile = new File(singlePathTField.getText());
            File saveFile = null;
            int lengthOfAlpha = 0;
            if (!lengthTextField.getText().equals("")) {
                lengthOfAlpha = Integer.parseInt(lengthTextField.getText());
            }
            if (!singleSavePathTF.getText().equals("") && chooseFunctions[10]) {
                //保存目录非空
                saveFile = new File(singleSavePathTF.getText());
            } else if (singleSavePathTF.getText().equals("") && chooseFunctions[10]) {
                //保存目录为空
                System.out.println("保存目录为空");
                return;
            }

            //功能计数，供进度条使用
            int choosedFuncCounts = 0;
            for (boolean choose : chooseFunctions) {
                if (choose) {
                    choosedFuncCounts++;
                }
            }
            if (chooseFunctions[10]) {
                //文档输出功能除外
                choosedFuncCounts--;
            }
            
            //避免选择了句法分析且输出excel
            if (chooseFunctions[11] && singleSavePathTF.getText().endsWith(".xlsx")) {
                JOptionPane.showMessageDialog(this, "句法分析仅支持导出为txt文档，请重新选择保存文件！", "警告", JOptionPane.WARNING_MESSAGE);
            } else {

                //启动进度框
                ProgressDialog progressDialog = new ProgressDialog();
                SwingUtilities.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        progressDialog.setVisible(true);
                        progressDialog.start();
                    }
                });

                SingleFileAnalyser2 singleFileAnalyser = new SingleFileAnalyser2(openFile, chooseFunctions[0],
                        chooseFunctions[1], chooseFunctions[2],
                        chooseFunctions[3], chooseFunctions[4],
                        chooseFunctions[5], chooseFunctions[6],
                        chooseFunctions[7], chooseFunctions[8],
                        chooseFunctions[9], chooseFunctions[10],
                        chooseFunctions[11],
                        lengthOfAlpha,
                        beginTextField.getText(),
                        endTextField.getText(),
                        singleResult, saveFile,
                        choosedFuncCounts, singleStartBT, progressDialog);
                new Thread(singleFileAnalyser).start();

                singleStartBT.setEnabled(false);
            }
        }

    }//GEN-LAST:event_singleStartBTMouseClicked

    private void doubleStartBTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_doubleStartBTMouseClicked
        // 点击双文档分析
        doubleResult.setText("");//首先清空显示框

        boolean[] chooseFunctions = new boolean[3];
        chooseFunctions[0] = wordsCountCB.isSelected();
        chooseFunctions[1] = sameWordsCB.isSelected();
        chooseFunctions[2] = doubleExportCB.isSelected();

        if (chooseFunctions[0] == false && chooseFunctions[1] == false) {
            //分析无效，至少选择一个功能
            JOptionPane.showMessageDialog(this, "请至少选择一个功能！（结果导出除外）", "警告", JOptionPane.WARNING_MESSAGE);
        } else {
            //判断文件是否是同一个文件
            if (pathATextField.getText().equals(pathBTextField.getText())) {
                JOptionPane.showMessageDialog(this, "待分析文件路径相同！请选择不同的文件进行分析。", "警告", JOptionPane.WARNING_MESSAGE);
            } else {
                //启动双文档分析
                File targetFileA = new File(pathATextField.getText());
                File targetFileB = new File(pathBTextField.getText());
                File saveFile = null;
                if (!doubleSavePathTF.getText().equals("") && chooseFunctions[2]) {
                    //保存目录非空
                    saveFile = new File(doubleSavePathTF.getText());
                } else if (doubleSavePathTF.getText().equals("") && chooseFunctions[2]) {
                    //保存目录为空
                    System.out.println("保存目录为空");
                    return;
                }
                
                ProgressDialog progressDialog = new ProgressDialog();
                SwingUtilities.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        progressDialog.setVisible(true);
                        progressDialog.start();
                    }
                });
                
                DoubleFileAnalyser2 doubleFileAnalyser = new DoubleFileAnalyser2(
                        targetFileA, targetFileB, chooseFunctions[0],
                        chooseFunctions[1], chooseFunctions[2], doubleResult, saveFile,
                        progressDialog,doubleStartBT);               
                new Thread(doubleFileAnalyser).start();
                doubleStartBT.setEnabled(false);
//                DoubleFileAnalyser doubleFileAnalyser = new DoubleFileAnalyser(
//                        targetFileA, targetFileB, chooseFunctions[0],
//                        chooseFunctions[1], chooseFunctions[2], doubleResult, saveFile);
//                doubleFileAnalyser.startAnalysis();
            }

        }
    }//GEN-LAST:event_doubleStartBTMouseClicked

    private void bigFileTargetBTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bigFileTargetBTMouseClicked
        //大文档词频分析：选择待分析文件
        File openFile = chooseOpenFile();
        if (openFile == null) {
            //选择文件无效，弹出提示框
            System.out.println("选择文件无效");
        } else {
            //System.out.println(openFile.getAbsolutePath());
            bigFileTargetTF.setText(openFile.getAbsolutePath());
            //判断A文件是否已经选择
            if (bigFileTargetTF.getText().length() != 0) {
                bigFileStartBT.setEnabled(true);
            }
        }
    }//GEN-LAST:event_bigFileTargetBTMouseClicked

    private void bigFileStartBTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bigFileStartBTMouseClicked
        // 大文档分析：开始分析
        bigFileResultArea.setText("");      //清空显示框
        MultiThreadsManager threadsManager = null;
        File targetFile = new File(bigFileTargetTF.getText());
        
        if (bigFileExportCB.isSelected()) {
            ExportToTxt txtExporter = null;
            ExportToExcel excelExporter = null;
            File saveFile = new File(bigFileSavePathTF.getText());
            //判断导出文件为txt还是xlsx       
            if (saveFile.getAbsolutePath().endsWith(".txt")) {
                //导出为txt
                txtExporter = new ExportToTxt(saveFile);
                txtExporter.init();
                threadsManager = new MultiThreadsManager(targetFile, bigFileResultArea, txtExporter);
            } else if (saveFile.getAbsolutePath().endsWith(".xlsx")) {
                //导出为xlsx
                excelExporter = new ExportToExcel(saveFile);
                excelExporter.init();
                threadsManager = new MultiThreadsManager(targetFile, bigFileResultArea, excelExporter);
            }
        } else {
            threadsManager = new MultiThreadsManager(new File(bigFileTargetTF.getText()), bigFileResultArea);
        }
        
        new Thread(threadsManager).start();
        
    }//GEN-LAST:event_bigFileStartBTMouseClicked

    private void bigFileExportCBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bigFileExportCBItemStateChanged
        // 大文档分析：选择导出文档
        if (bigFileExportCB.isSelected()) {
            //可选择保存文件
            bigFileSaveFileBT.setEnabled(true);
        } else {
            //不可选择保存文件
            bigFileSaveFileBT.setEnabled(false);
        }
    }//GEN-LAST:event_bigFileExportCBItemStateChanged

    private void bigFileSaveFileBTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bigFileSaveFileBTMouseClicked
        // 大文档词频分析：保存路径选择
        File saveFile = chooseSaveFile();
        if (saveFile == null) {
            //选择文件无效，弹出提示框
            System.out.println("保存文件无效");
        } else {
            //System.out.println(saveFile.getAbsolutePath());
            bigFileSavePathTF.setText(saveFile.getAbsolutePath());
        }
    }//GEN-LAST:event_bigFileSaveFileBTMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindows.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindows.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindows.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindows.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindows().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox alphaAscendCB;
    private javax.swing.JCheckBox alphaDescendCB;
    private javax.swing.JLabel beginLB;
    private javax.swing.JTextField beginTextField;
    private javax.swing.JCheckBox bigFileExportCB;
    private javax.swing.JTextArea bigFileResultArea;
    private javax.swing.JButton bigFileSaveFileBT;
    private javax.swing.JTextField bigFileSavePathTF;
    private javax.swing.JButton bigFileStartBT;
    private javax.swing.JButton bigFileTargetBT;
    private javax.swing.JTextField bigFileTargetTF;
    private javax.swing.JCheckBox changeCB;
    private javax.swing.JButton chooseABT;
    private javax.swing.JButton chooseBBT;
    private javax.swing.JCheckBox doubleExportCB;
    private javax.swing.JTextArea doubleResult;
    private javax.swing.JButton doubleSavePathBT;
    private javax.swing.JTextField doubleSavePathTF;
    private javax.swing.JButton doubleStartBT;
    private javax.swing.JLabel endLB;
    private javax.swing.JTextField endTextField;
    private javax.swing.JCheckBox extractBeginCB;
    private javax.swing.JCheckBox extractEndCB;
    private javax.swing.JCheckBox extractLengthCB;
    private javax.swing.JCheckBox frequencyAscendCB;
    private javax.swing.JCheckBox frequencyCB;
    private javax.swing.JCheckBox frequencyDescendCB;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lengthLB;
    private javax.swing.JTextField lengthTextField;
    private javax.swing.JCheckBox outOfBoundCB;
    private javax.swing.JTextField pathATextField;
    private javax.swing.JTextField pathBTextField;
    private javax.swing.JLabel programName;
    private javax.swing.JCheckBox sameWordsCB;
    private javax.swing.JButton singleChooseBT;
    private javax.swing.JCheckBox singleExportCB;
    private javax.swing.JLabel singlePathLB;
    private javax.swing.JLabel singlePathLB1;
    private javax.swing.JTextField singlePathTField;
    private javax.swing.JTextArea singleResult;
    private javax.swing.JButton singleSavePathBT;
    private javax.swing.JTextField singleSavePathTF;
    private javax.swing.JButton singleStartBT;
    private javax.swing.JCheckBox syntacticCB;
    private javax.swing.JCheckBox wordsCountCB;
    // End of variables declaration//GEN-END:variables
}
